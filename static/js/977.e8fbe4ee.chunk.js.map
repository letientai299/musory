{"version":3,"file":"static/js/977.e8fbe4ee.chunk.js","mappings":"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","sources":["pages/Metronome.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport { DebounceInput } from 'react-debounce-input'\nimport { GiPauseButton, GiPlayButton } from 'react-icons/gi'\nimport { Loop, Synth, Transport } from 'tone'\n\nclass timeSignature {\n  str: string\n  beats: number // how many beat per measure\n  note: number // what kind of note per beat\n  constructor(sign: string) {\n    this.str = sign\n    const ss = sign.split('/')\n    if (ss.length != 2) {\n      this.beats = 0\n      this.note = 0\n      return\n    }\n    this.beats = Number.parseInt(ss[0])\n    this.note = Number.parseInt(ss[1])\n  }\n}\n\nconst timeSignatures: timeSignature[] = ['2/2', '2/4', '3/4', '4/4'].map(\n  (s) => new timeSignature(s)\n)\n\nconst TimeSignature = (p: {\n  active: boolean\n  sign: timeSignature\n  onClick: (str: string) => void\n}) => {\n  let cls =\n    'flex border m-6 p-6 flex-col items-center text-center text-3xl font-bold ' +\n    'border-4 hover:border-cyan-500'\n  if (p.active) {\n    cls += ' border-cyan-700'\n  }\n\n  return (\n    <button className={cls} onClick={() => p.onClick(p.sign.str)}>\n      <p>{p.sign.beats}</p>\n      <p>{p.sign.note}</p>\n    </button>\n  )\n}\n\nconst defaultBMP = 100\nconst minBMP = 10\nconst maxBMP = 200\nconst safeBmp = (pre: number, n: number) => {\n  if (Number.isNaN(n)) {\n    return pre\n  }\n\n  if (n < minBMP) {\n    return minBMP\n  }\n\n  if (n > maxBMP) {\n    return maxBMP\n  }\n\n  return n\n}\n\nlet toneLoop: Loop\n\nfunction togglePlaying(playing: boolean, bpm: number, sign: string) {\n  if (toneLoop) {\n    toneLoop.stop(0)\n  }\n\n  if (!playing) {\n    return\n  }\n\n  const timeSign = new timeSignature(sign)\n\n  const synth = new Synth().toDestination()\n  let count = 0\n  toneLoop = new Loop((time) => {\n    if (sign != '' && count % timeSign.beats == 0) {\n      synth.triggerAttackRelease('B2', 0.01, time)\n    } else {\n      synth.triggerAttackRelease('G2', 0.01, time)\n    }\n    count++\n  }).start(0)\n  Transport.bpm.rampTo(bpm)\n  Transport.start()\n}\n\nconst Metronome = () => {\n  const [bmp, setBmp] = useState(defaultBMP)\n  const [playing, setPlaying] = useState(false)\n  const [signature, setSignature] = useState('')\n\n  useHotkeys('up', () => setBmp((pre) => safeBmp(pre, pre + 1)))\n  useHotkeys('k', () => setBmp((pre) => safeBmp(pre, pre + 1)))\n  useHotkeys('down', () => setBmp((pre) => safeBmp(pre, pre - 1)))\n  useHotkeys('j', () => setBmp((pre) => safeBmp(pre, pre - 1)))\n\n  useHotkeys('Enter', () => setPlaying((pre) => !pre))\n  useHotkeys('Space', () => setPlaying((pre) => !pre))\n\n  togglePlaying(playing, bmp, signature)\n\n  return (\n    <div className=\"m-auto flex flex-col center items-center\">\n      <DebounceInput\n        autoFocus\n        type=\"number\"\n        debounceTimeout={200}\n        value={bmp}\n        onChange={(e) =>\n          setBmp((pre) => safeBmp(pre, Number.parseInt(e.target.value)))\n        }\n        className=\"text-9xl m-auto w-1/2 text-center outline-none appearance-none\"\n      />\n      <p className=\"text-3xl\">BMP</p>\n\n      <button\n        id=\"btn-play\"\n        className=\"text-9xl\"\n        onMouseDown={() => setPlaying(!playing)}\n      >\n        {playing ? <GiPauseButton /> : <GiPlayButton />}\n      </button>\n\n      <div className=\"flex flex-row\">\n        {timeSignatures.map((sign) => {\n          const active = signature != '' && signature == sign.str\n          return (\n            <TimeSignature\n              active={active}\n              key={sign.str}\n              sign={sign}\n              onClick={setSignature}\n            />\n          )\n        })}\n      </div>\n\n      <article className=\"prose\">\n        <ul>\n          <li>\n            <kbd>Up</kbd> or <kbd>j</kbd> to increase the BMP.\n          </li>\n          <li>\n            <kbd>Down</kbd> or <kbd>k</kbd> to increase the BMP.\n          </li>\n          <li>\n            <kbd>Enter</kbd> or <kbd>Space</kbd> to toggle playing.\n          </li>\n          <li>\n            Hit <kbd>Tab</kbd> or click outside of BMP input if can't toggle\n            playing using shortcuts\n          </li>\n        </ul>\n      </article>\n    </div>\n  )\n}\n\nexport default Metronome\n"],"names":["toneLoop","timeSignature","sign","str","beats","note","this","ss","split","length","Number","parseInt","timeSignatures","map","s","TimeSignature","p","cls","active","className","onClick","safeBmp","pre","n","isNaN","useState","bmp","setBmp","playing","setPlaying","signature","setSignature","useHotkeys","bpm","stop","timeSign","synth","Synth","toDestination","count","Loop","time","triggerAttackRelease","start","Transport","togglePlaying","DebounceInput","autoFocus","type","debounceTimeout","value","onChange","e","target","id","onMouseDown"],"sourceRoot":""}